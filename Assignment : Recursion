*************************************************************************************************************************************************************************
+++++++++++++++++++++++++++++++++++++++++Count Zero---------------------------------Count Zeros--------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*************************************************************************************************************************************************************************
public class solution {
	public static int countZerosRec(int input) {
		if (input < 10) {
			if (input == 0)
				return 1;
			else
				return 0;
		}
		int smallAns = countZerosRec(input / 10);
		if (input % 10 == 0)
			smallAns = 1 + smallAns;
		return smallAns;
	}
}
***********************************************************************************************************************************************************************
------------------------------------------------Geometric Sum----------------------------------Geometric Sum----------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
***********************************************************************************************************************************************************************
import java.util.*;

public class solution {

	public static double findGeometricSum(int k) {
		// Write your code here
		if (k == 0) {
			return 1;
		}
		double ans = 1 / (Math.pow(2, k));
		return ans + findGeometricSum(k - 1);
	}
}

*********************************************************************************************************************************************************************
-----------------------------------------------------Check Palindrome (recursive)-----------------------Check Palindrome (recursive)--------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
********************************************************************************************************************************************************************
public class solution {

	public static boolean isStringPalindrome(String s) {
		// Write your code here
		if (s.length() <= 1) {
			return true;
		}
		if (s.charAt(0) == s.charAt(s.length() - 1)) {
			return isStringPalindrome(s.substring(1, s.length() - 1));
		} else {
			return false;
		}

	}
}
**********************************************************************************************************************************************************************
----------------------------------------------------Sum of digits (recursive)--------------------------Sum of digits (recursive)--------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

public class solution {

	public static int sumOfDigits(int input){
		// Write your code here
			if (input <=0){
			return 0;
		}
		return input%10+sumOfDigits(input/10);

	}
}

*********************************************************************************************************************************************************************
---------------------------------Multiplication (Recursive)------------------------------Multiplication (Recursive)-------------------------------------------------
********************************************************************************************************************************************************************

public class solution {

	public static int multiplyTwoIntegers(int m, int n){
		// Write your code here
		if (n == 0) {
			return 0;
		}
		return m + (multiplyTwoIntegers(m, n - 1));
	
	}
}
*******************************************************************************************************************************************************************
------------------------------------------------String to Integer------------------String to Integer-------------------------------------------------------------
********************************************************************************************************************************************************************
import java.util.*;

public class solution {

	public static int convertStringToInt(String s) {
		// Write your code here
		if (s.length() == 1) {
			return Integer.parseInt(Character.toString(s.charAt(0)));
		}
		int c = Integer.parseInt(Character.toString(s.charAt(0)));
		// (int)s.charAt(0)-48;
		int d = c * (int) (Math.pow(10, s.length() - 1));
		return d + convertStringToInt(s.substring(1));

	}
}
*********************************************************************************************************************************************************************
--------------------------------Pair Star----------------------------------------------Pair Star---------------------------------------------------------------------
*********************************************************************************************************************************************************************

public class solution {

	// Return the updated string
	public static String addStars(String s) {
		
		if(s.length() <=1){
			return s;
		}
		if(s.charAt(0)==s.charAt(1)){
			return s.charAt(0)+"*"+addStars(s.substring(1));
		}
		else{
			return s.charAt(0)+addStars(s.substring(1));
	}
}
}
*****************************************************************************************************************************************************************
-----------------------------------Check AB-----------------------------------------------Check AB---------------------------------------------------------------
*****************************************************************************************************************************************************************
public class Solution {

	public static boolean checkAB(String s) {
		// Write your code here
		if (s.length() == 0) {
			return true;
		}
		if (s.charAt(0) == 'a') {
			if (s.substring(1).length() > 1 && s.substring(1, 3).equals("bb")) {
				return checkAB(s.substring(3));
			} else {
				return checkAB(s.substring(1));
			}
		} else {
			return false;
		}
		

	}
}
***********************************************************************************************************************************************************************
*---------------------------------------------------------Staircase----------------------------------Staircase--------------------------------------------------------
***********************************************************************************************************************************************************************

public class Solution {	
     public static int staircase(int n){
		
	/* Your class should be named Solution.
	 * Don't write main() function.
	 * Don't read input, it is passed as function argument.
	 * Return output and don't print it.
	 * Taking input and printing output is handled automatically.
	 */
       if (n == 1) {
		return 1;
	}
	if (n == 2) {
		return 2;
	}
	if (n == 3) {
		return 4;
	}
	return staircase(n - 1) + staircase(n - 2) + staircase(n - 3);
	}
	
}













