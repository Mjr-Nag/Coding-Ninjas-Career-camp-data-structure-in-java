************************************************************************************************************************************************************************
-------------------------------------------------------------Code Binary Search---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

public class Solution 
{ 
     public static int binarySearch(int[] arr, int x) 
    {
        //Your code goes here
        int start = 0;
        int end = arr.length - 1;
        int mid = start;
        while(start <= end)
        {
            mid = start + (end - start) / 2; if (arr[mid] > x)
            {
                end = mid - 1;
            }
            else if
                (arr[mid] < x)
            {
                start = mid + 1;
            }
            else
            {
                return mid;

            }
        }
        return -1;
    }
}
*************************************************************************************************************************************************************************
------------------------------------------------------------Selection Sort----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
***********************************************************************************************************************************************************************

public class Solution 
{  

    public static void selectionSort(int[] arr)
     {
    	//Your code goes here
         int index;
        for(int i=0;i<arr.length-1;i++) 
        {
            index=i;
            for(int j=i+1;j<arr.length;j++)
            {
                if(arr[j]<arr[index]) 
                {
                    index=j;
                }
            }

            int save=arr[i];
            arr[i]=arr[index];
            arr[index]=save;
        }
    }
}
    
-**********************************************************************************************************************************************************************
--------------------------------------------------------------Code Bubble Sort-----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
***********************************************************************************************************************************************************************


public class Solution
 {  

    public static void bubbleSort(int[] arr)
    {
    	//Your code goes here
         for (int i = 0; i < arr.length-1; i++)
        {

            for (int j = 0; j < arr.length - i-1; j++)
            {
                if (arr[j]>arr[j+1])
                {
                    int f1=arr[j+1];
                    arr[j+1]=arr[j];
                    arr[j]=f1;
                }
            }
        }
    }
}**********************************************************************************************************************************************************************
-----------------------------------------------------------------------Code Insertion Sort-----------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

public class Solution
 {  

    public static void insertionSort(int[] arr)
     {
    	//Your code goes here
         int i = 1;
        int temp;
        while(i < arr.length)
        {
            temp = arr[i];
            int j = i - 1;
            while(j >= 0)
            {
                if(arr[j] > temp)
                {
                    arr[j + 1] = arr[j];
                }
                else
                {
                    break;
                }
                j -= 1;
            }
            arr[j + 1] = temp; i += 1;
        }
    }
}
**********************************************************************************************************************************************************************
-----------------------------------------------------------------------Code Merge Two Sorted Arrays----------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

public class Solution
 {  

    public static int[] merge(int arr1[], int arr2[]) 
    {
    	//Your code goes here
         int[] ans = new int[arr1.length + arr2.length];
        int i = 0, j = 0, k = 0; 
        while(i < arr1.length && j < arr2.length)
        {
            if(arr1[i] < arr2[j])
            {
                ans[k] = arr1[i]; k += 1; i += 1;
            }
            else
            {
                ans[k] = arr2[j]; k += 1; j += 1;
            }
        }
        while(i < arr1.length)
        {
            ans[k] = arr1[i]; k += 1; i += 1;
        }
        while(j < arr2.length)
        {
            ans[k] = arr2[j]; k += 1; j += 1;
        }
        return ans;
    }

}
**********************************************************************************************************************************************************************
--------------------------------------------------------------Assignment Push Zeros to end---------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
*********************************************************************************************************************************************************************
public class Solution {  

    public static void pushZerosAtEnd(int[] arr) {
    	//Your code goes here
        int[] arr2=new int[arr.length];
        int p=0;
        for (int i = 0; i < arr2.length; i++) {
            if(arr[i]!=0){
                arr2[p]=arr[i];
                p++;
            }
        }
        System.arraycopy(arr2, 0, arr, 0, arr.length);
        //return 0;
    }

}
************************************************************************************************************************************************************************
--------------------------------------------------------------------Rotate array--------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************
public class Solution 
{  
     public static void rotate(int[] arr, int d)
      {
    	//Your code goes here
        int[] temp = new int[d];
        for (int i = 0; i < d; i++)
         {
            temp[i] = arr[i];
         }
        for (int i = d; i < arr.length; i++)
         {
            arr[i - d] = arr[i];
        }
        int k = 0;
        for (int i = arr.length - d; i < arr.length; i++)
         {
            arr[i] = temp[k++];
        }
    }

}
----****************************************************************************************************************************************************************
----------------------------------------------------     ----------------------Second Largest in array-------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
*********************************************************************************************************************************************************************
public class Solution {  

    public static int secondLargestElement(int[] arr) {
    	//Your code goes here
         int FirstL = Integer.MIN_VALUE;
         int SecL = Integer.MIN_VALUE;
         for (int a : arr)
        {
            if (FirstL < a)
            {
                FirstL = a;
            }
        }
        for (int b : arr)
        {
            if (FirstL > b && SecL < b)
            {
                SecL = b;
            }
        }
        return SecL;
    }

}

***********************************************************************************************************************************************************************
-------------------------------------------------------------------Check Array Rotation-------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
*********************************************************************************************************************************************************************
public class Solution
 {
    public static int arrayRotateCheck(int[] arr)
    {
    	//Your code goes here
        int check = 0;
        for (int i = 1; i < arr.length; i++)
         {
            if (arr[i - 1] < arr[i]) 
            {
                if (check == 0)
                 {
                    check++;
                }
                check++;
            } else {
                break;
            }
        }
        if (check == arr.length)
            check = 0;
        return check;
    }

}

***********************************************************************************************************************************************************************
--------------------------------------------------------------Sort 0 1 2---------------Sort 0 1 2---------------------------------------------------------------------
***********************************************************************************************************************************************************************
public class Solution
{
    static void swap(int arr[], int i, int j)
    {
        int temp_value = arr[i];
        arr[i] = arr[j];
        arr[j] = temp_value;

    }
    public static void sort012(int[] arr)
    {
        int i = 0;
        int j = arr.length-1;
        int m =0;
        while(m<=j)
        {
            if (arr[m]==0)
            {
                
            swap(arr, i, m);
            m++;
            i++;
           }
        else if (arr[m]==2)
        {
            swap(arr, m , j);
            j--;

        }
        else
         {
            m++;
        }

    }
}
}
*********************************************************************************************************************************************************************
---------------------------------------------------Sum of Two Arrays------------------------Sum of Two Arrays-------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
*********************************************************************************************************************************************************************

public class Solution {

    public static void sumOfTwoArrays(int arr1[], int arr2[], int output[]) {
    	//Your code goes here
        int i = arr1.length - 1;
        int j = arr2.length - 1;
        int carry = 0;
        int k = Math.max(arr1.length, arr2.length);
        while(i >= 0 && j >= 0)
        {
            int sum = arr1[i] + arr2[j] + carry;
            output[k] = sum % 10;
            carry = sum / 10;
            i -= 1;
            j -= 1;
            k -= 1;
        } 
        while(i >= 0)
        {
            int sum = arr1[i] + carry;
            output[k] = sum % 10;
            carry = sum / 10;
            i -= 1; k -= 1;
        }
        while(j >= 0)
        {
            int sum = arr2[j] + carry; output[k] = sum % 10;
            carry = sum / 10;
            j -= 1;
            k -= 1;
        }
        output[0] = carry;
    }
}


