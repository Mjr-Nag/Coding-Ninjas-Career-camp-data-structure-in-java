*************************************************************************************************************************************************************************
------------------------------------------------------Count Words------------------------------Count Words--------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*************************************************************************************************************************************************************************

public class Solution
 {
	public static int countWords(String str)
	 {	
		//Your code goes here
		int count =0;
		if(str.length() != 0){
			count = 1;
		}
		else
		{
			return 0;
		}
		for(int i =0; i<str.length(); i++)
		{
			if(str.charAt(i)==' ')
			{
				count++;
			}
		}
		return count;
		}
}
**************************************************************************************************************************************************************************
--------------------------------String Palindrome---------------------------------------String Palindrome--------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
**************************************************************************************************************************************************************************

public class Solution {

	public static boolean isPalindrome(String str) {
		//Your code goes here
		int s = 0;
		int e = str.length()-1;
		while(s<=e){
			if(str.charAt(s) != str.charAt(e)){
				return false;
			}
			s++;
			e--;
		}
		return true;
	}

}
**********************************************************************************************************************************************************************
-----------------------------------------All substrings--------------------------------------All substrings-----------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

public class Solution {

	public static void printSubstrings(String str) {
		//Your code goes here
		for (int i = 0; i<str.length(); i++){
			for(int j = i; j<str.length(); j++){
				System.out.println(str.substring(i,j+1));
			}
		}
	}

}

**********************************************************************************************************************************************************************
---------------------------------------------Reverse String Wordwise-------------------------------Reverse String Wordwise---------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
*********************************************************************************************************************************************************************
public class Solution {
	public static String reverseWordWise(String input) {
		// Write your code here
	
        String[] arrOdStr=input.split(" ");
        String reverseWord="";
        for (int i = arrOdStr.length-1;i >=0 ; i--)
        {
            reverseWord+=arrOdStr[i]+" ";
        }
        return reverseWord;

    }

	}

************************************************************************************************************************************************************************
-------------------------------------------------------Assignment--------------------------------Check Permutation-----------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************

import java.util.*;

public class Solution {

	public static boolean isPermutation(String str1, String str2) {
		// Your code goes here
		int n1 = str1.length();
		int n2 = str2.length();
		if (n1 != n2)
			return false;
		char ch1[] = str1.toCharArray();
		char ch2[] = str2.toCharArray();

		Arrays.sort(ch1);
		Arrays.sort(ch2);
		for (int i = 0; i < n1; i++)
			if (ch1[i] != ch2[i])
				return false;
		return true;
	}
}
**************************************************************************************************************************************************************
--------------------------------------------------Remove Consecutive Duplicates----------------------------Remove Consecutive Duplicates-----------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------
***************************************************************************************************************************************************************

public class Solution {

	public static String removeConsecutiveDuplicates(String str) {
		//Your code goes here
		String str1 = "";
		char ch = str.charAt(0);
		str1 = str1+ch;
		for(int i       = 1 ; i<str.length(); i++){
			if(ch != str.charAt(i)){
				str1 = str1 + str.charAt(i);
				ch = str.charAt(i);
			}
		}
          return str1;
	}

}

***********************************************************************************************************************************************************************
--------------------------------------------------------Reverse Each Word------------------------------------Reverse Each Word----------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************************************************************
import java.lang.*;

public class Solution
 {

	public static String reverseEachWord(String str)
	 {
        //Your code goes here
        String words[]=str.split("\\s");
        String reverseWord="";
        for(String w:words)
        {
            StringBuilder sb=new StringBuilder(w);
            sb.reverse();
            reverseWord+=sb.toString()+" ";
        }
        return reverseWord.trim();
    }

}
***********************************************************************************************************************************************************************
----------------------------------------------------Remove character-----------------------------------Remove character----------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
*************************************************************************************************************************************************************************

public class Solution
 {
	public static String removeAllOccurrencesOfChar(String str, char ch)
	 {
		 String s1=new String();
         int len=str.length();
         int temp=(int)ch;
         for(int i=0;i<len;i++)
        {
               if((int)str.charAt(i)==temp)
               continue;
               s1+=str.charAt(i);

        }
        return s1;
    }
}
***********************************************************************************************************************************************************************
-------------------------------------------------------------------------Highest Occuring Character--------------------------------Highest Occuring Character----------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
***********************************************************************************************************************************************************************
public class Solution
 {
	public static char highestOccuringChar(String str)
	 {
		
        int count[] = new int[256];

        int len = str.length();
        for (int i=0; i<len; i++)
            count[str.charAt(i)]++;

        int max = -1;
        char result = ' ';

        for (int i = 0; i < len; i++)
        {
            if (max < count[str.charAt(i)])
            {
                max = count[str.charAt(i)];
                result = str.charAt(i);
            }

        }

        return result;
    }

}
***********************************************************************************************************************************************************************
----------------------------------------------Compress the String-------------------------Compress the String---------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
************************************************************************************************************************************************************************
public class Solution 
{
	public static String getCompressedString(String str)
	 {
		// Write your code here.
		
				String s = new String();
				int n = str.length();
				for (int i = 0; i < n; i++)
				 {

					int count = 1;
					while (i < n - 1 && str.charAt(i) == str.charAt(i + 1))
					{
						count++;
						i++;
					}
					s += str.charAt(i);
					if (count > 1)
					 {
						s += count;
					}
				}
				return s;
	}
}

